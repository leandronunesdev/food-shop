[{"C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\index.tsx":"1","C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\reportWebVitals.ts":"2","C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\App.tsx":"3","C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\Components\\Beer\\index.tsx":"4","C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\Components\\Food\\index.tsx":"5","C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\index.tsx":"6","C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\App.tsx":"7","C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\Components\\Beer\\index.tsx":"8","C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\Components\\Food\\index.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":246,"mtime":1612013847197,"results":"13","hashOfConfig":"11"},{"size":1225,"mtime":1612113964037,"results":"14","hashOfConfig":"11"},{"size":2129,"mtime":1612113878583,"results":"15","hashOfConfig":"11"},{"size":232,"mtime":1616715366416,"results":"16","hashOfConfig":"17"},{"size":262,"mtime":1616715058353,"results":"18","hashOfConfig":"17"},{"size":1225,"mtime":1616715818593,"results":"19","hashOfConfig":"17"},{"size":2129,"mtime":1616715058356,"results":"20","hashOfConfig":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"h3yn8s",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jrp69o",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\index.tsx",[],["43","44"],"C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\reportWebVitals.ts",[],"C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\App.tsx",[],"C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\Components\\Beer\\index.tsx",["45"],"C:\\Users\\nunes\\Documents\\Programação\\React CTT\\Aula 30 01\\food-shop\\src\\Components\\Food\\index.tsx",["46"],"C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\index.tsx",[],["47","48"],"C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\App.tsx",[],"C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\Components\\Beer\\index.tsx",["49"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { InterfaceCerveja } from '../../types/InterfaceCerveja';\r\n \r\nconst Beer = () => {\r\n    \r\n    const[cervejas, setCervejas] = useState<InterfaceCerveja[]>([]) \r\n\r\n    const getCervejas = () => {\r\n        axios.get('https://api.punkapi.com/v2/beers/?per_page=8')\r\n        .then(resposta => setCervejas(resposta.data))\r\n    }    \r\n \r\n    return (\r\n        <div className=\"food-beer-list food-shop\">        \r\n            <h1>Tipos de Cerveja</h1>\r\n            <button onClick={getCervejas}>Buscar Cerveja</button>\r\n            <div className=\"beers-list\">\r\n                {\r\n                    cervejas !== undefined &&\r\n                    cervejas.map((item: InterfaceCerveja) => (\r\n                    <div key={item.id} className=\"beer\">\r\n                        <img src={item.image_url} alt={item.name} />\r\n                        <h3>{item.name}</h3>\r\n                        <span>{item.tagline}</span>\r\n                        <small>{item.description}</small>\r\n                    </div>\r\n                    ))                    \r\n                }        \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Beer;","C:\\Users\\nunes\\Documents\\Programação\\Aulas\\Aula 18 - 30 01\\food-shop\\src\\Components\\Food\\index.tsx",["50"],"import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { InterfaceCategorias } from '../../types/InterfaceCategorias';\r\nimport { InterfaceMenu } from '../../types/InterfaceMenu';\r\n\r\nconst Foods = () => {\r\n\r\n  const [categorias, setCategorias] = useState<InterfaceCategorias[]>([])\r\n  const [categoryName, setCategoryName ] = useState<String>()\r\n  const [menu, setMenu] = useState<InterfaceMenu[]>([])\r\n  const [search, setSearch] = useState<String>() \r\n  \r\n  useEffect(() => {\r\n    axios.get('https://www.themealdb.com/api/json/v1/1/categories.php')\r\n    .then(resposta => setCategorias(resposta.data.categories))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(categoryName !== null) {\r\n      axios.get(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`)\r\n      .then(resposta => setMenu(resposta.data.meals))\r\n    }\r\n  },[categoryName]) \r\n\r\n  useEffect(() => {\r\n    if(search !== null) {\r\n      axios.get(`https://www.themealdb.com/api/json/v1/1/search.php?s=${search}`)\r\n      .then(resposta => setMenu(resposta.data.meals))\r\n    }\r\n  },[search])\r\n  \r\n  return (\r\n    <div className=\"food-beer-list food-shop\">\r\n      <h1>Tipos de pratos</h1>\r\n      <p>\r\n        Selecione uma categoria ou digite a comida (em inglês):\r\n        <input type=\"text\" placeholder=\"Digite a comida...\" onChange={(event) => setSearch(event.target.value)}/>\r\n      </p>\r\n      <ul>\r\n          { \r\n            categorias !== null &&            \r\n            categorias.map((item: InterfaceCategorias) => (\r\n              <li key={item.idCategory} onClick={() => setCategoryName(item.strCategory)}>{item.strCategory}</li>\r\n            ))\r\n          }\r\n      </ul>\r\n      <h2>Tipo selecionado: <strong>{categoryName}</strong></h2>      \r\n      <div className=\"food-container\">\r\n        {\r\n          menu !== null &&\r\n          menu.map((item: InterfaceMenu) => (\r\n            <div className=\"food-item\" key={item.idMeal}>\r\n              <img src={item.strMealThumb} />\r\n              <p>{item.strMeal}</p>\r\n          </div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Foods;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":53,"column":15,"nodeType":"61","endLine":53,"endColumn":46},{"ruleId":"51","replacedBy":"62"},{"ruleId":"53","replacedBy":"63"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":53,"column":15,"nodeType":"61","endLine":53,"endColumn":46},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["64"],["65"],"no-global-assign","no-unsafe-negation"]